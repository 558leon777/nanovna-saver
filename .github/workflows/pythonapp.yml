name: Python application

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - development

jobs:
  coverage:
    name: Coverage
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with pylint
      run: |
        pip install pylint
        pylint --exit-zero NanoVNASaver
    - name: Unittests / Coverage
      run: |
        pip install pytest-cov
        pytest --cov=NanoVNASaver

  release:  
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, ]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install PyInstaller
    - name: Build binary
      run: |
        pyinstall nanovna-saver.py

    - name: Archive production artifacts
      uses: actions/upload-artifact@v1
      with:
        name: NanoVNASaver
        path: dist/nanovna-saver
